
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://efiqwoqkudpqanqfmhta.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVmaXF3b3FrdWRwcWFucWZtaHRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc1NzY4NjUsImV4cCI6MjA2MzE1Mjg2NX0.x2K01ddZP-PQqdnR0UYcFHt3Xez0jBPLsX3G4T7OCew";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage
  }
});

// Mock client for tables not in Database type yet
// Used for development until database types are updated
export const mockSupabase = {
  from: (table: string) => ({
    select: (columns?: string) => ({
      eq: (column: string, value: any) => ({
        single: () => Promise.resolve({ data: null, error: null }),
        then: (callback: any) => Promise.resolve({ data: [], error: null }).then(callback),
      }),
      then: (callback: any) => Promise.resolve({ data: [], error: null }).then(callback),
    }),
    insert: (values: any) => ({
      then: (callback: any) => Promise.resolve({ data: values, error: null }).then(callback),
      select: () => ({
        single: () => Promise.resolve({ data: values, error: null }),
      })
    }),
    update: (values: any) => ({
      eq: () => ({
        then: (callback: any) => Promise.resolve({ data: values, error: null }).then(callback),
      })
    }),
    delete: () => ({
      eq: () => ({
        then: (callback: any) => Promise.resolve({ data: null, error: null }).then(callback),
      })
    })
  })
};
